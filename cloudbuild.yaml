steps:
  # Set up buildx
  - name: "gcr.io/cloud-builders/docker"
    args: ["buildx", "create", "--name", "mybuilder"]
  - name: "gcr.io/cloud-builders/docker"
    args: ["buildx", "use", "mybuilder"]
  - name: "gcr.io/cloud-builders/docker"
    args: ["buildx", "inspect", "--bootstrap"]

  # Build for AMD64
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "buildx"
      - "build"
      - "--progress=plain"
      - "--platform=linux/amd64"
      - "-t"
      - "gcr.io/$PROJECT_ID/agentd-webtop:latest-amd64"
      - "-t"
      - "gcr.io/$PROJECT_ID/agentd-webtop:${SHORT_SHA}-amd64"
      - "-f"
      - "Dockerfile"
      - "--push"
      - "."

  # Build for ARM64
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "buildx"
      - "build"
      - "--progress=plain"
      - "--platform=linux/arm64"
      - "-t"
      - "gcr.io/$PROJECT_ID/agentd-webtop:latest-arm64"
      - "-t"
      - "gcr.io/$PROJECT_ID/agentd-webtop:${SHORT_SHA}-arm64"
      - "-f"
      - "Dockerfile"
      - "--push"
      - "."

  # Create multi-arch manifest
  - name: "gcr.io/cloud-builders/docker"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        docker buildx imagetools create -t gcr.io/$PROJECT_ID/agentd-webtop:latest \
          gcr.io/$PROJECT_ID/agentd-webtop:latest-amd64 \
          gcr.io/$PROJECT_ID/agentd-webtop:latest-arm64
        docker buildx imagetools create -t gcr.io/$PROJECT_ID/agentd-webtop:${SHORT_SHA} \
          gcr.io/$PROJECT_ID/agentd-webtop:${SHORT_SHA}-amd64 \
          gcr.io/$PROJECT_ID/agentd-webtop:${SHORT_SHA}-arm64

  # Verify the pushed images using docker buildx
  - name: "gcr.io/cloud-builders/docker"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        docker buildx imagetools inspect gcr.io/$PROJECT_ID/agentd-webtop:latest
        docker buildx imagetools inspect gcr.io/$PROJECT_ID/agentd-webtop:${SHORT_SHA}
        docker buildx imagetools inspect gcr.io/$PROJECT_ID/agentd-webtop:latest-amd64
        docker buildx imagetools inspect gcr.io/$PROJECT_ID/agentd-webtop:latest-arm64

  # Verify the pushed images using Google Cloud SDK
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        gcloud container images describe gcr.io/$PROJECT_ID/agentd-webtop:latest
        gcloud container images describe gcr.io/$PROJECT_ID/agentd-webtop:${SHORT_SHA}
        gcloud container images describe gcr.io/$PROJECT_ID/agentd-webtop:latest-amd64
        gcloud container images describe gcr.io/$PROJECT_ID/agentd-webtop:latest-arm64

  # Pull the images to ensure they are fully processed
  - name: "gcr.io/cloud-builders/docker"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        docker pull gcr.io/$PROJECT_ID/agentd-webtop:latest || true
        docker pull gcr.io/$PROJECT_ID/agentd-webtop:${SHORT_SHA} || true
        docker pull gcr.io/$PROJECT_ID/agentd-webtop:latest-amd64 || true
        docker pull gcr.io/$PROJECT_ID/agentd-webtop:latest-arm64 || true

  # Add a delay to ensure GCR has fully processed the new images
  - name: "gcr.io/cloud-builders/gcloud"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        echo "Waiting for images to be fully processed..."
        sleep 30

  # Final verification step using buildx imagetools
  - name: "gcr.io/cloud-builders/docker"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        docker buildx imagetools inspect gcr.io/$PROJECT_ID/agentd-webtop:latest
        docker buildx imagetools inspect gcr.io/$PROJECT_ID/agentd-webtop:${SHORT_SHA}
        docker buildx imagetools inspect gcr.io/$PROJECT_ID/agentd-webtop:latest-amd64
        docker buildx imagetools inspect gcr.io/$PROJECT_ID/agentd-webtop:latest-arm64

images:
  - "gcr.io/$PROJECT_ID/agentd-webtop:latest"
  - "gcr.io/$PROJECT_ID/agentd-webtop:latest-amd64"
  - "gcr.io/$PROJECT_ID/agentd-webtop:latest-arm64"
  - "gcr.io/$PROJECT_ID/agentd-webtop:${SHORT_SHA}"
  - "gcr.io/$PROJECT_ID/agentd-webtop:${SHORT_SHA}-amd64"
  - "gcr.io/$PROJECT_ID/agentd-webtop:${SHORT_SHA}-arm64"

timeout: "3600s"
options:
  machineType: "N1_HIGHCPU_8"
